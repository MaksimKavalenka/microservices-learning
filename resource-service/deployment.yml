apiVersion: v1
kind: Namespace
metadata:
  name: microservices-learning

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: resource-service-postgres-pvc
  namespace: microservices-learning
spec:
  accessModes:
    - ReadWriteOnce
    - ReadOnlyMany
  resources:
    requests:
      storage: 1Gi

---

apiVersion: v1
kind: Secret
metadata:
  name: resource-service-postgres-secret
  namespace: microservices-learning
type: Opaque
data:
  POSTGRES_USER: cG9zdGdyZXM=
  POSTGRES_PASSWORD: cG9zdGdyZXM=
  POSTGRES_DB: cG9zdGdyZXM=

---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: resource-service-postgres
  namespace: microservices-learning
  labels:
    name: resource-service-postgres
spec:
  selector:
    matchLabels:
      name: resource-service-postgres
  template:
    metadata:
      labels:
        name: resource-service-postgres
    spec:
      containers:
      - name: postgres
        image: postgres
        ports:
        - name: postgres-port
          containerPort: 5432
        envFrom:
        - secretRef:
            name: resource-service-postgres-secret
        volumeMounts:
          - name: postgres-volume-mount
            mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-volume-mount
          persistentVolumeClaim:
            claimName: resource-service-postgres-pvc

---

apiVersion: v1
kind: Service
metadata:
  name: resource-service-postgres
  namespace: microservices-learning
spec:
  selector:
    name: resource-service-postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: postgres-port

---

apiVersion: v1
kind: ConfigMap
metadata:
  name: resource-service-configmap
  namespace: microservices-learning
data:
  DATABASE_DESTINATION_HOST: resource-service-postgres.microservices-learning
  INFRASTRUCTURE_SONGSERVICE_HOST: song-service.microservices-learning
  SPRING_APPLICATION_NAME: resource-service

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: resource-service
  namespace: microservices-learning
  labels:
    name: resource-service
spec:
  replicas: 2
  selector:
    matchLabels:
      name: resource-service
  template:
    metadata:
      labels:
        name: resource-service
    spec:
      containers:
      - name: resource-service
        image: maksimkavalenka/resource-service:1.0.0
        imagePullPolicy: Always
        ports:
        - name: service-port
          containerPort: 8080
        env:
        - name: SPRING_DATASOURCE_USERNAME
          valueFrom:
            secretKeyRef:
              name: resource-service-postgres-secret
              key: POSTGRES_USER
        - name: SPRING_DATASOURCE_PASSWORD
          valueFrom:
            secretKeyRef:
              name: resource-service-postgres-secret
              key: POSTGRES_PASSWORD
        envFrom:
        - configMapRef:
            name: resource-service-configmap
        startupProbe:
          httpGet:
            path: /api/actuator/health
            port: service-port
          initialDelaySeconds: 15
          periodSeconds: 10
          failureThreshold: 6
        livenessProbe:
          httpGet:
            path: /api/actuator/health
            port: service-port
          initialDelaySeconds: 15
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: service-port
          initialDelaySeconds: 15
          periodSeconds: 10

---

apiVersion: v1
kind: Service
metadata:
  name: resource-service
  namespace: microservices-learning
spec:
  type: NodePort
  selector:
    name: resource-service
  ports:
    - protocol: TCP
      port: 8080
      targetPort: service-port
      nodePort: 30081
